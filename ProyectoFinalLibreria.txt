
//Buscar

using System;
using System.Drawing;
using System.Windows.Forms;

namespace Libreria
       {
	
	public partial class Buscar : Form
	{
		public Buscar()
		     {
			InitializeComponent();
		                }
		
		public Libros libroSeleccionado {get; set;}
		
		
		
		void BtnBuscarClick(object sender, EventArgs e)
		         {
			dvgTodos.DataSource=Metodos.Buscar(txtBus.Text);
		}
		
		void BtnAceptarClick(object sender, EventArgs e)
		{
			if (dvgTodos.SelectedRows.Count==1)
			
			{
				int id=Convert.ToInt32(dvgTodos.CurrentRow.Cells[0].Value);
				libroSeleccionado=Metodos.ObtenerLibros(id);
				this.Close();
			}
			else MessageBox.Show("DEBES SELECCIONAR UNA FILA");	
		}
		
		
		
		
		
		void BtnCancelarClick(object sender, EventArgs e)
		{
			MainForm abrir = new MainForm();
			abrir.Show();
			this.Hide();			
		}
	}
}


//Program

using System;
using System.Windows.Forms;

namespace Libreria
          {
	
	internal sealed class Program
	{
		
		[STAThread]
		private static void Main(string[] args)
		{
			Application.EnableVisualStyles();
			Application.SetCompatibleTextRenderingDefault(false);
			Application.Run(new MainForm());
		    }
		
	    }
}


//Metodos

using System;
using MySql.Data.MySqlClient;
using System.Collections.Generic;

namespace Libreria
{
	
	public class Metodos
	{
		
		public static int Agregar(Libros pLibros)
		{
			int retorno =0;
			
			MySqlCommand comando =new MySqlCommand(string.Format("insert into libros(nombre, autor, editorial, anio)values ('{0}','{1}','{2}','{3}')",
			                                                     pLibros.libro, pLibros.autor, pLibros.editorial, pLibros.anio),Conectar.ObtenerConexion());
			retorno = comando.ExecuteNonQuery();
			return retorno;
		}
		
		public static List<Libros> Buscar(string plibro)
		{
			List<Libros> _lista = new List<Libros>();
			MySqlCommand _comando = new MySqlCommand(string.Format("select id, nombre, autor, editorial, anio from libros where nombre LIKE '%{0}%'",plibro),Conectar.ObtenerConexion());
			MySqlDataReader _reader=_comando.ExecuteReader();
			while (_reader.Read())
			{
				Libros pLibros = new Libros();
				
				pLibros.id=_reader.GetInt32(0);
				pLibros.libro=_reader.GetString(1);
				pLibros.autor=_reader.GetString(2);
				pLibros.editorial=_reader.GetString(3);
				pLibros.anio=_reader.GetString(4);
				
				_lista.Add(pLibros);
								
			}
			return _lista;
			
		}
		
		public static Libros ObtenerLibros(int pId)
		{
			Libros pLibros = new Libros();
			MySqlConnection conexion = Conectar.ObtenerConexion();
			MySqlCommand _comando = new MySqlCommand(string.Format("select id, nombre, autor, editorial, anio from libros where id = '{0}'",pId),Conectar.ObtenerConexion());
			MySqlDataReader _reader =_comando.ExecuteReader();
			while(_reader.Read())
			{
				pLibros.id=_reader.GetInt32(0);
				pLibros.libro=_reader.GetString(1);
				pLibros.autor=_reader.GetString(2);
				pLibros.editorial=_reader.GetString(3);
				pLibros.anio=_reader.GetString(4);
			}
			conexion.Close();
			return pLibros;
		}
		
		
		public static int Editar(Libros pLibros)
		{
			int retorno=0;
			
			MySqlConnection conexion=Conectar.ObtenerConexion();
			MySqlCommand comando = new MySqlCommand(string.Format("update libros set nombre = '{0}', autor ='{1}', editorial= '{2}', anio ='{3}' where id = '{4}'",pLibros.libro, pLibros.autor, pLibros.editorial, pLibros.anio, pLibros.id), conexion);
			retorno = comando.ExecuteNonQuery();
			conexion.Close();
			return retorno;
					
		}
		
		public static int Eliminar(int pId)
		{
			int retorno =0;
			MySqlConnection conexion = Conectar.ObtenerConexion();
			MySqlCommand comando = new MySqlCommand(string.Format("delete from libros where id={0}", pId),conexion);
			retorno = comando.ExecuteNonQuery();
			return retorno;
		}
		
		
	}
}


//MainForm

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;

namespace Libreria
{
	
	
	
	public partial class MainForm : Form
	{
		public MainForm()
		{
			
			InitializeComponent();
			
			
			}

		public Libros LibroActual {get; set;}
		
		void BtnAgregarClick(object sender, EventArgs e)
		{
			
			Libros pLibros = new Libros();
			
			pLibros.libro=txtLibro.Text.Trim();
			pLibros.autor=txtAutor.Text.Trim();
			pLibros.editorial=txtEditorial.Text.Trim();
			pLibros.anio=txtAnio.Text.Trim();
			
			int resultado=Metodos.Agregar(pLibros);
			if (resultado > 0)
			{
				MessageBox.Show ("Libro guardado con exito","Guardado",MessageBoxButtons.OK, MessageBoxIcon.Information);
			}
			else
				MessageBox.Show ("No se pudo guardar el Libro", "Falló",MessageBoxButtons.OK, MessageBoxIcon.Information);
		}
			
		void BtnEditarClick(object sender, EventArgs e)
		{
			Libros pLibros = new Libros();
			
			pLibros.libro=txtLibro.Text.Trim();
			pLibros.autor=txtAutor.Text.Trim();
			pLibros.editorial=txtEditorial.Text.Trim();
			pLibros.anio=txtAnio.Text.Trim();
			
			pLibros.id=LibroActual.id;
			
			if (Metodos.Editar(pLibros) >0)
			{
				MessageBox.Show("Libro editado","Editado", MessageBoxButtons.OK, MessageBoxIcon.Information);
				
			}
			else
			{
				MessageBox.Show("NO SE PUDO ACTUALIZAR","ERROR AL ACTUALIZAR",MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
			}
			
					}
		
		void BtnEliminarClick(object sender, EventArgs e)
		{
			if (MessageBox.Show ("Desea continua?","Estás seguro?",MessageBoxButtons.YesNo, MessageBoxIcon.Question)==DialogResult.Yes)
			{
				if (Metodos.Eliminar(LibroActual.id)>0)
				{
					MessageBox.Show("Eliminado correctamente","Eliminado",MessageBoxButtons.OK, MessageBoxIcon.Information);
				}
				else
				{
					MessageBox.Show("no se puso eliminar","no se eliminó", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
				}
			}			
		}
		
		void BtnBuscarClick(object sender, EventArgs e)
		{
			Buscar _buscar = new Buscar();
			_buscar.ShowDialog();
			
			LibroActual = _buscar.libroSeleccionado;
			
			txtLibro.Text=_buscar.libroSeleccionado.libro;
			txtEditorial.Text=_buscar.libroSeleccionado.editorial;
			txtAutor.Text=_buscar.libroSeleccionado.autor;
			txtAnio.Text=_buscar.libroSeleccionado.anio;
			
		}
		
		void MainFormLoad(object sender, EventArgs e)
		{
			
		}
		}
	}

//Libros


using System;

namespace Libreria
        {
	
	public class Libros
	                    {
		public int id {get; set;}
		public string libro {get; set;}
		public string autor {get; set;}
		public string editorial {get; set;}
		public string anio {get; set;}
		
		
		
		public Libros()
		        {
		}
	
	
		public Libros(int pId, string plibro, string pautor, string peditorial, string panio)
		{
			this.id = pId;
			this.libro = plibro;
			this.autor = pautor;
			this.editorial = peditorial;
			this.anio= panio;
		}
	
	
	
	}
}

//Conectar


using MySql.Data.MySqlClient;
using System;

namespace Libreria
          {
	
	
	public class Conectar
	       {
	 	public static MySqlConnection ObtenerConexion()
		{
			MySqlConnection conecta= new MySqlConnection ("server = 127.0.0.1; database= libreria; Uid = root; Pwd =antony3453;");
			conecta.Open();
			return conecta;
		        }
		
		
		
		
		
	    }
}

